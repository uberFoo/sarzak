[
  {
    "description": "This represents additional information necessary to render a `Binary` relationship in the user interface.",
    "id": "2b428772-1c21-56f3-ab6f-04a5c798e08a",
    "key_letters": "BUI",
    "name": "BinaryUI"
  },
  {
    "description": "Object imported from the sarzak Domain.\n\nWe don‚Äôt have a means of representing this as imported in Cuckoo, so I‚Äôm just adding it here.\n\nüê∂ { \"imported_object\": { \"domain\": \"v2::sarzak\", \"model_file\": \"models/sarzak.json\", \"id\": \"7178e7a4-5131-504b-a7b3-c2c0cfedf343\"}}\n\n",
    "id": "7178e7a4-5131-504b-a7b3-c2c0cfedf343",
    "key_letters": "OBJ",
    "name": "Object"
  },
  {
    "description": "The imported R_ISA object from the sarzak domain.\n\nüê∂ { \"imported_object\": { \"domain\": \"v2::sarzak\", \"model_file\": \"models/sarzak.json\", \"id\": \"0cbeeb50-21ce-5e83-9f2e-65d1410d553f\" }}",
    "id": "0cbeeb50-21ce-5e83-9f2e-65d1410d553f",
    "key_letters": "R_ISA",
    "name": "Isa"
  },
  {
    "description": "An anchor, or anchor point, is the location where an arrow from a relationship attached to an object.\n\nRather than storing the `x` and `y` coordinates of where the anchor attaches, we are related to an [Edge], which is related to a box, which is related to the [Object] to which we are attached. This of course completes the circuit from the [Relationship] for which we are drawing the lines in the first place.\n\nAnchor also contains a direction, so that we know the orientation to draw the arrows. Finally, there is an offset, which is a point that describes the offset from the anchor for the relationship phrase.",
    "id": "27edcc78-f257-5a0b-a2e4-c233987e0889",
    "key_letters": "ANCH",
    "name": "Anchor"
  },
  {
    "description": "The left side of a rendered box\n\n‚ùóÔ∏è{\"singleton_object\": true}",
    "id": "82c4f811-7872-5301-8cf9-62317fb85dfe",
    "key_letters": "EDG_L",
    "name": "Left"
  },
  {
    "description": "",
    "id": "ba8b62d7-3313-523f-862d-c245a924a96b",
    "key_letters": "AUI",
    "name": "AssociativeUI"
  },
  {
    "description": "Subtype Anchors\n\nJust as it sounds, these are [`Anchor`]s used by [`Subtype`]s in an [`Isa`] relationship.",
    "id": "bfb6d5f3-5dcc-5638-9a0e-de19eb25c278",
    "key_letters": "SUB_A",
    "name": "Subtype Anchors"
  },
  {
    "description": "The top edge of the rendered box\n\n‚ùóÔ∏è{\"singleton_object\": true}",
    "id": "77d72046-26d1-5cde-a39a-178b4e7fff71",
    "key_letters": "EDG_T",
    "name": "Top"
  },
  {
    "description": "The bottom of a rendered box\n\n‚ùóÔ∏è{\"singleton_object\": true}",
    "id": "c5e70120-c313-5fcd-9c14-6ef38cc9b6b6",
    "key_letters": "EDG_B",
    "name": "Bottom"
  },
  {
    "description": "Binary Relationship from sarzak domain\n\nüê∂ { \"imported_object\": { \"domain\": \"v2::sarzak\", \"model_file\": \"models/sarzak.json\", \"id\": \"56c5ed80-25e7-592e-ab36-a306c78ac58b\" }}",
    "id": "56c5ed80-25e7-592e-ab36-a306c78ac58b",
    "key_letters": "R_BIN",
    "name": "Binary"
  },
  {
    "description": "Render a rectangle\n\nThis represents additional information that is necessary to draw an Object in the user interface.\n\nNote that although we are logically related to [Edge] via `R14` we actually render our own edges. We use the svg rect primitive to do this.\n\nI‚Äôm throwing this in for the fuck of it. I don‚Äôt know if it‚Äôll be useful or not.\n\n```js\nvar rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\nrect.setAttribute('class', 'objectRect');\nrect.setAttribute('id', obj.id);\nrect.setAttribute('x', obj.x);\nrect.setAttribute('y', obj.y);\nrect.setAttribute('width', obj.width);\n rect.setAttribute('height', obj.height);\n```",
    "id": "9a9dcaea-a969-54ba-90ce-fad03cec83d8",
    "key_letters": "OUI",
    "name": "ObjectUI"
  },
  {
    "description": "Additional information necessary to render relationships in the user interface.",
    "id": "8dd4e8b9-aec5-5a1c-94d9-a765ac514f62",
    "key_letters": "RUI",
    "name": "RelationshipUI"
  },
  {
    "description": "Imported Object from the sarzak domain\n\nüê∂ { \"imported_object\": { \"domain\": \"v2::sarzak\", \"model_file\": \"models/sarzak.json\", \"id\": \"17de0bb6-ee65-5516-b8eb-9a9a35e5fedd\"}}\n\n",
    "id": "17de0bb6-ee65-5516-b8eb-9a9a35e5fedd",
    "key_letters": "R_ASSOC",
    "name": "Associative"
  },
  {
    "description": "The right side of a rendered box\n\n‚ùóÔ∏è{\"singleton_object\": true}",
    "id": "c3bd7676-dd84-5bd7-9d19-a756d06a63c4",
    "key_letters": "EDG_R",
    "name": "Right"
  },
  {
    "description": "The Edge of an Object Depiction\n\nThere are four edges to a rendered object.",
    "id": "6cec25c6-d33b-55c0-a594-9eaaece27ed6",
    "key_letters": "OUI_E",
    "name": "Object Edge"
  },
  {
    "description": "This represents additional data necessary to render an `Isa` relationship in the user interface.",
    "id": "a7d2303d-e2b5-5c4f-a7ba-a9a852146871",
    "key_letters": "IUI",
    "name": "IsaUI"
  },
  {
    "description": "A point is a two-tuple that represents a location on the drawing canvas.",
    "id": "423935ca-86d2-5d0a-ad35-8e7f00663448",
    "key_letters": "PNT",
    "name": "Point"
  },
  {
    "description": "An attachment point for an [Anchor]\n\nIt‚Äôs used with [Anchor] to orient the arrows on the ends of the lines according to the side of the box to which they are attached. Some arrows are on top, some bottom, etc.\n\nThis is not rendered as a visible item. The [ObjectUI] manages that by itself. This instead renders an invisible line. The line is used for several things. For one, when hovered over the cursor changes to the appropriate one for resizing.\n\nAlso, this is used to register where relationship may anchor.\n\nIt‚Äôs this last regard that is somewhat concerning. Indicating that an anchor is attached to an edge get‚Äôs us the connection we need between an [Object] and a [Relationship]. But it‚Äôs under-specified. It doesn‚Äôt indicate where along the edge the arrow is connected.\n\nI‚Äôm considering put a relationship back between [Anchor] and [Point].",
    "id": "83049490-b61e-55c4-a90f-afb3361e0661",
    "key_letters": "EDG",
    "name": "Edge"
  }
]